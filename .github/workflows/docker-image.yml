name: Docker Image CI

on:
  schedule:
    - cron: "0 0 * * *"
  # dispatch
  workflow_dispatch:

env:
  GITHUB_API_VERSION: 2022-11-28

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download latest restic binary
        id: download
        run: |
          set -eux

          JSON_RESPONSE=$(curl -s \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: $GITHUB_API_VERSION" \
            https://api.github.com/repos/restic/restic/releases/latest)

          CURRENT_TAG=$(echo $JSON_RESPONSE | jq -r '.tag_name' | cut -c 2-)

          if [ "$CURRENT_TAG" != "${{ vars.RESTIC_LAST_TAG }}" ]; then
            echo "CURRENT_TAG=$CURRENT_TAG" >> "$GITHUB_OUTPUT"
            echo "TAG_CHANGED=1" >> "$GITHUB_OUTPUT"

            for arch in "arm" "arm64" "amd64"; do
              FILE="restic_${CURRENT_TAG}_linux_${arch}.bz2"
              OUTFILE="restic_linux_${arch}"
              DOWNLOAD_URL=$(echo $JSON_RESPONSE | jq -r ".assets[] | select(.name==\"$FILE\") | .browser_download_url")
              curl -L $DOWNLOAD_URL | bzip2 -d > $OUTFILE
            done
          else
            echo "TAG_CHANGED=0" >> "$GITHUB_OUTPUT"
            exit 0
          fi
      - name: Update RESTIC_LAST_TAG var
        if: steps.download.outputs.TAG_CHANGED == '1'
        run: |
          curl -L \
            -X PATCH \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"\
            -H "X-GitHub-Api-Version: ${{ env.GITHUB_API_VERSION }}" \
            https://api.github.com/repos/${{ github.repository }}/actions/variables/RESTIC_LAST_TAG \
            -d '{"name":"RESTIC_LAST_TAG","value":"${{ steps.download.outputs.CURRENT_TAG }}"}'

      - name: Set up QEMU
        if: steps.download.outputs.TAG_CHANGED == '1'
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        if: steps.download.outputs.TAG_CHANGED == '1'
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GHCR
        if: steps.download.outputs.TAG_CHANGED == '1'
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Docker meta
        if: steps.download.outputs.TAG_CHANGED == '1'
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ghcr.io/${{ github.repository_owner }}/restic
          tags: |
            type=semver,pattern={{version}},value=${{ steps.download.outputs.CURRENT_TAG }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.download.outputs.CURRENT_TAG }}
            type=semver,pattern={{major}},value=${{ steps.download.outputs.CURRENT_TAG }}
            type=sha
      - name: Build and push
        if: steps.download.outputs.TAG_CHANGED == '1'
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm/v7,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
